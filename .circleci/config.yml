# notes: CCI manages the virtual envs for us

version: 2.1
executors:
  python_node:
    docker:
      - image: cimg/python:3.9.0
      - image: cimg/redis:5.0
    working_directory: ~/repo

jobs:
  build-node:
    docker:
      - image: cimg/node:18.15.0
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install via Yarn
          command: |
            cd react
            yarn install
            yarn build
      - persist_to_workspace:
          root: ~/repo
          paths:
            - react/node_modules
            - react/build

  install-pip-requirements:
    executor: python_node
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run:
          name: Create virtualenv and activate
          command: |
            python -m venv .venv
            . .venv/bin/activate
      - run:
          name: Install pip v23x
          command: |
            . .venv/bin/activate
            pip install pip==23
      - run:
          name: Install Pip Requirements
          command: |
            . .venv/bin/activate
            pip install -r requirements/requirements.txt
      - save_cache:  # Save the virtual environment to cache
          key: deps2-{{ .Branch }}-{{ checksum "requirements/requirements.txt" }}
          paths:
            - "~/repo/.venv"

  run-tests:
    executor: python_node
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - restore_cache:  # Restoring the packages from cache
          key: deps2-{{ .Branch }}-{{ checksum "requirements/requirements.txt" }}
      - run:
          name: Run Tests
          command: |
            . .venv/bin/activate
            python manage.py test

  package-app:
    executor: python_node
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - restore_cache:  # Restoring the packages from cache
          key: deps2-{{ .Branch }}-{{ checksum "requirements/requirements.txt" }}
      - run:
          name: Package Application
          command: |
            . .venv/bin/activate
            python -m build
      - persist_to_workspace:
          root: ~/repo
          paths:
            - dist

  upload-to-pypi:
    executor: python_node
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - restore_cache:  # Restoring the packages from cache
          key: deps2-{{ .Branch }}-{{ checksum "requirements/requirements.txt" }}
      - run:
          name: Upload to PyPI
          command: |
            . .venv/bin/activate
#            twine upload --repository-url https://test.pypi.org/legacy/ dist/*  --non-interactive
            twine upload dist/*  --non-interactive

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-node:
          filters:
            branches:
              only:
                - staging
                - master
      - install-pip-requirements:
          filters:
            branches:
              only:
                - staging
                - master
# TESTS FAILILNG SKIP FOR NOW
#      - run-tests:
#          requires:
#            - build-node
#            - install-pip-requirements
#          filters:
#            branches:
#              only:
#                - staging
#                - master
      - package-app:
          requires:
            - run-tests
            - build-node
            - install-pip-requirements
          filters:
            branches:
              only:
                - staging
                - master
      - upload-to-pypi:
          requires:
            - package-app
          filters:
            branches:
              only:
                - staging
                - master
