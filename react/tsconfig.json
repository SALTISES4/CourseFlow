{
  "compilerOptions": {
    "outDir": "./build",  // try to make TS ignore as much as possible for now
    "noImplicitAny": false, // allow 'any' types
    "strictNullChecks": false, // allow fuzziness in our null definitions
    "strict": false,  // lol
    "skipLibCheck": true,  // don't TS check the node modules and other defined libs
    "allowJs": true,  // don't allow just TS/TSX files
    "noEmitOnError": false, // make TS still build even if we run into errors
    "noEmit": false, // forgot what this does
    "target": "ESNext",
    "useDefineForClassFields": true,
    "lib": [
      "DOM",
      "DOM.Iterable",
      "ESNext"
    ],
    "checkJs": false,
    "esModuleInterop": false,
    "allowSyntheticDefaultImports": true,
    "forceConsistentCasingInFileNames": true,
    "module": "ESNext",
    "moduleResolution": "Node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "typeRoots": [
      "./node_modules/@types",
      "./src/types"
      // is this from tsconfig path or from baseurl? (note that we don't have any types yet)
    ],
    "jsx": "react-jsx",  // This must be set if you're using "paths"
    "baseUrl": "./src/",
    /**
    ALIASES
    */
    "paths": {
      "@cfModule/*": [
        "./*"
      ],
      "@cfComponents/*": [
        "./components/*"
      ],
      "@cfViews/*": [
        "./components/views/*"
      ],
      "@cfPages/*": [
        "./components/pages/*"
      ],
      "@cfCommonComponents/*": [
        "./components/common/*"
      ],
      "@cfParentComponents": [
        "./components/common/extended"
      ],
      "@cfParentComponents/*": [
        "./components/common/extended/*"
      ],
      "@cfUIComponents/*": [
        "./components/common/UIComponents/*"
      ],
      "@cfUIComponents": [
        "./components/common/UIComponents"
      ],
      "@cfFindState": [
        "./redux/FindState.js"
      ],
      "@cfRedux/*": [
        "./redux/*"
      ],
      "@cfReducers": [
        "./redux/Reducers.js"
      ],
      "@cfUtility": [
        "./utilityFunctions.js"
      ],
      "@cfConstants": [
        "./constants.js"
      ],
      "@XMLHTTP/*": [
        "./XMLHTTP/*"
      ],
      "@cfSCSS/*": [
        "./scss/*"
      ]
    }
  },
  "include": [
    "./**/*" //is this from baseurl relative path?
  ],
  "exclude": [
    "./build/**/*",
    "node_modules",
  ],
  "references": [
    {
      "path": "./tsconfig.node.json"
    }
  ]
}
